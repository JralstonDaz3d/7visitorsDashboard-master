const NfpImageModuleBaseURL = "https://nftcdn.daz3d.com/nfp/gen1/";

function NfpImageModule(ui, enabled) {
    this.cachedStatus = {};
    this.options = {};
    this.ui = ui;
    this.enabled = enabled;
    this.selectedToken = NftUpgrade.nullNft;
    this.selectedImage = null;

    this.available = {"default": "Default", "anim_001" : "Animated", "full": "Full Body", "hip": "3/4 Body", "hip2": "Half Body"};
    this.notAvailable = {
        'full' : ['1','7','16','30','37','42','85','575','1336','1408','1583','2935','4512','4619','5743','6195','7596','7800','8451','8453','8843'],
        'hip' : ['1','7','16','30','37','42','85','575','1408','1583','2935','4512','5743','6195','7596','7800','8451','8453','8843'],
        'hip2' : ['1','7','16','30','37','42','85','575','1408','1583','2935','4512','5743','6195','7596','8453','8843', '3366', '8451', '8725', '8727', '8843'],
        'anim_001' : ['1','7','16','30','37','42','72','85','112','116','241','250','286','314','366','389','413','493','507','519','552','553','565','575','576','581','591','598','600','608','620','658','659','670','680','681','727','732','739','811','820','822','825','851','860','865','878','885','892','949','952','1055','1056','1077','1090','1113','1114','1121','1142','1154','1157','1193','1211','1226','1234','1251','1256','1287','1298','1299','1305','1320','1334','1338','1351','1352','1356','1399','1400','1408','1423','1436','1444','1451','1466','1487','1493','1525','1535','1536','1568','1569','1580','1583','1608','1617','1707','1711','1723','1744','1765','1770','1790','1868','1874','1882','1884','1896','1901','1913','1926','1937','1940','1944','1954','1958','1961','1962','1971','1989','2012','2015','2039','2044','2052','2053','2056','2058','2061','2084','2085','2089','2104','2109','2144','2170','2179','2198','2205','2211','2214','2216','2231','2239','2242','2257','2329','2359','2360','2376','2380','2388','2391','2414','2415','2422','2431','2435','2455','2459','2463','2472','2476','2481','2484','2490','2494','2497','2499','2505','2507','2509','2513','2521','2527','2528','2531','2532','2543','2545','2547','2548','2557','2569','2573','2591','2600','2604','2608','2613','2616','2620','2623','2625','2626','2628','2631','2634','2635','2638','2643','2646','2654','2657','2663','2666','2676','2679','2681','2690','2696','2699','2703','2709','2716','2719','2721','2724','2727','2746','2751','2756','2758','2775','2776','2777','2779','2781','2783','2789','2819','2825','2834','2843','2844','2847','2855','2859','2861','2866','2872','2873','2875','2883','2885','2887','2890','2897','2899','2902','2906','2908','2915','2917','2925','2926','2929','2932','2933','2934','2935','2936','2945','2955','2958','2961','2962','2963','2971','2973','2975','2988','2994','2995','2998','3009','3016','3033','3038','3044','3048','3061','3086','3087','3103','3105','3106','3115','3119','3120','3126','3139','3148','3150','3159','3161','3171','3179','3184','3193','3207','3208','3211','3216','3218','3250','3251','3258','3260','3263','3264','3269','3270','3273','3286','3287','3291','3292','3293','3294','3295','3305','3306','3307','3309','3321','3324','3335','3349','3352','3360','3363','3365','3366','3367','3371','3373','3377','3380','3386','3396','3398','3399','3409','3410','3412','3415','3419','3420','3434','3445','3446','3448','3457','3470','3483','3490','3492','3503','3509','3510','3516','3517','3526','3530','3532','3537','3541','3542','3548','3550','3554','3559','3565','3566','3567','3584','3586','3591','3597','3604','3609','3610','3617','3621','3628','3633','3634','3639','3641','3644','3648','3655','3656','3658','3660','3664','3672','3679','3683','3685','3687','3698','3701','3704','3706','3714','3719','3726','3730','3754','3759','3760','3761','3768','3769','3788','3791','3798','3805','3810','3814','3815','3820','3822','3823','3825','3831','3838','3842','3843','3844','3846','3861','3867','3871','3872','3873','3875','3880','3882','3883','3884','3885','3886','3888','3889','3890','3891','3892','3893','3895','3896','3899','3902','3903','3905','3906','3907','3909','3910','3911','3912','3913','3915','3916','3917','3918','3919','3921','3922','3923','3925','3926','3928','3929','3931','3932','3933','3934','3936','3937','3939','3940','3941','3942','3943','3944','3947','3948','3949','3950','3951','3952','3953','3954','3955','3956','3957','3960','3961','3962','3965','3966','3967','3968','3969','3970','3971','3973','3974','3976','3978','3979','3981','3982','3983','3984','3985','3987','3988','3989','3992','3994','3995','3998','4000','4001','4003','4006','4018','4026','4030','4032','4034','4042','4053','4060','4066','4075','4077','4086','4093','4095','4097','4099','4101','4102','4108','4110','4116','4117','4119','4126','4134','4140','4143','4144','4160','4163','4168','4169','4172','4177','4182','4185','4192','4193','4199','4203','4204','4205','4211','4222','4224','4231','4243','4244','4249','4256','4258','4259','4265','4269','4283','4288','4289','4310','4313','4326','4328','4330','4348','4354','4355','4356','4360','4364','4365','4367','4369','4395','4402','4409','4432','4436','4440','4452','4457','4459','4462','4470','4475','4495','4501','4507','4512','4519','4529','4539','4543','4546','4551','4553','4564','4572','4581','4582','4587','4592','4594','4616','4624','4628','4637','4645','4656','4662','4672','4675','4677','4702','4713','4718','4723','4724','4725','4726','4727','4731','4741','4743','4747','4748','4758','4759','4773','4774','4775','4788','4803','4805','4809','4811','4817','4818','4824','4828','4834','4836','4843','4845','4847','4853','4868','4870','4872','4878','4883','4887','4891','4897','4898','4903','4905','4919','4923','4924','4927','4932','4934','4941','4942','4943','4947','4948','4953','4954','4959','4967','4975','4977','4978','4990','4991','4996','5010','5022','5037','5045','5051','5057','5071','5073','5078','5081','5083','5085','5088','5093','5096','5105','5107','5112','5124','5126','5146','5147','5164','5167','5174','5178','5185','5191','5192','5200','5205','5212','5216','5220','5231','5234','5236','5238','5244','5248','5255','5260','5265','5269','5287','5295','5300','5303','5305','5312','5314','5320','5331','5340','5350','5354','5360','5361','5362','5367','5368','5372','5375','5377','5380','5387','5389','5391','5392','5397','5401','5414','5419','5423','5427','5432','5437','5440','5442','5447','5448','5449','5459','5460','5465','5473','5478','5482','5485','5491','5496','5497','5499','5503','5508','5514','5516','5517','5521','5530','5532','5534','5543','5559','5572','5576','5577','5578','5587','5588','5590','5593','5596','5597','5598','5599','5602','5603','5610','5614','5622','5623','5625','5636','5639','5647','5649','5658','5662','5673','5688','5696','5697','5701','5702','5705','5707','5710','5711','5715','5720','5723','5724','5731','5732','5738','5739','5741','5743','5749','5752','5753','5756','5762','5763','5766','5773','5779','5783','5790','5793','5796','5805','5829','5830','5841','5842','5852','5853','5858','5860','5864','5866','5876','5878','5894','5900','5909','5913','5927','5929','5931','5937','5938','5939','5946','5948','5949','5954','5956','5962','5967','5968','5971','5972','5977','5978','5984','5995','5997','5998','5999','6002','6008','6015','6019','6034','6035','6042','6043','6044','6054','6066','6067','6070','6071','6072','6081','6085','6090','6093','6094','6108','6112','6115','6117','6122','6128','6132','6133','6134','6141','6152','6154','6155','6158','6162','6165','6167','6181','6187','6189','6194','6195','6208','6209','6217','6223','6224','6231','6239','6241','6245','6257','6260','6262','6264','6265','6268','6270','6273','6275','6277','6279','6283','6289','6293','6300','6303','6306','6315','6320','6322','6326','6349','6352','6355','6367','6373','6376','6378','6379','6381','6385','6391','6394','6398','6400','6405','6406','6409','6415','6416','6421','6427','6431','6433','6435','6436','6449','6452','6458','6460','6463','6468','6472','6475','6477','6478','6481','6482','6484','6486','6492','6498','6511','6516','6521','6523','6525','6531','6534','6542','6543','6544','6546','6548','6560','6561','6566','6567','6572','6574','6576','6595','6597','6600','6601','6605','6613','6617','6622','6630','6635','6639','6644','6645','6649','6652','6669','6675','6685','6690','6706','6708','6712','6713','6714','6721','6725','6742','6749','6751','6753','6755','6761','6767','6769','6773','6774','6775','6777','6779','6780','6786','6788','6791','6794','6796','6803','6805','6815','6817','6828','6830','6833','6838','6839','6841','6847','6850','6852','6855','6865','6869','6871','6875','6876','6881','6892','6894','6898','6900','6908','6910','6911','6920','6925','6931','6939','6948','6950','6951','6954','6960','6965','6966','6968','6982','6984','6997','6999','7005','7007','7016','7023','7025','7039','7050','7051','7067','7070','7076','7084','7087','7107','7109','7114','7118','7122','7123','7124','7129','7134','7140','7143','7145','7146','7148','7153','7155','7159','7160','7165','7178','7181','7184','7188','7191','7200','7201','7203','7210','7227','7228','7233','7240','7243','7255','7257','7258','7259','7276','7277','7283','7284','7286','7294','7299','7305','7311','7313','7324','7328','7332','7333','7336','7337','7340','7341','7352','7354','7355','7356','7364','7372','7377','7385','7391','7392','7393','7402','7403','7405','7407','7409','7416','7431','7434','7442','7443','7446','7447','7461','7474','7476','7478','7482','7483','7495','7503','7506','7508','7511','7515','7520','7521','7526','7529','7530','7532','7533','7538','7539','7540','7549','7552','7559','7560','7575','7576','7580','7582','7590','7594','7595','7596','7598','7609','7643','7646','7650','7654','7658','7663','7667','7669','7676','7677','7680','7681','7683','7687','7693','7702','7705','7709','7719','7724','7733','7736','7740','7741','7742','7745','7748','7749','7753','7759','7763','7767','7775','7776','7781','7785','7794','7807','7812','7816','7821','7827','7829','7835','7837','7839','7840','7842','7844','7847','7851','7878','7879','7883','7886','7893','7899','7902','7908','7914','7916','7919','7945','7948','7949','7951','7953','7954','7956','7957','7963','7966','7967','7971','7985','7987','7990','7998','8001','8007','8010','8011','8014','8018','8021','8024','8054','8056','8059','8060','8061','8071','8088','8090','8091','8097','8100','8101','8102','8104','8106','8115','8116','8118','8138','8139','8146','8147','8148','8156','8159','8166','8176','8179','8184','8193','8194','8198','8200','8202','8203','8208','8214','8225','8227','8235','8236','8238','8242','8243','8244','8246','8249','8259','8274','8282','8292','8293','8295','8297','8310','8311','8313','8318','8319','8321','8328','8339','8351','8359','8366','8367','8376','8380','8382','8385','8392','8397','8403','8406','8407','8412','8420','8424','8428','8431','8432','8436','8440','8442','8451','8452','8453','8455','8456','8462','8468','8471','8474','8477','8487','8490','8498','8499','8502','8517','8523','8525','8526','8544','8545','8549','8563','8564','8566','8568','8569','8573','8582','8583','8584','8602','8615','8625','8630','8636','8641','8642','8643','8646','8649','8652','8655','8657','8660','8669','8671','8672','8673','8676','8678','8680','8681','8682','8689','8690','8693','8698','8707','8709','8710','8718','8722','8725','8727','8728','8729','8736','8739','8745','8746','8749','8758','8763','8769','8770','8773','8780','8781','8789','8792','8795','8796','8804','8816','8842','8843','8844','8847','8856','8859','8865','8867','8871','8873','8874','8880','8883'],
    };

    this.name = "images";
    this.label = "Images";
    this.icon = `<svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g clip-path="url(#clip0_37_182)">
                        <path d="M33.6094 40H6.38783C4.69413 39.9985 3.07021 39.3251 1.87257 38.1274C0.674941 36.9298 0.00146451 35.3059 0 33.6122V11.0197C0.000496222 10.119 0.320967 9.24771 0.904249 8.56135L7.06257 1.33286C7.41802 0.914975 7.86006 0.579335 8.35807 0.349192C8.85607 0.119048 9.39815 -0.00010257 9.94677 -1.47729e-05H33.6094C34.4494 -0.000741375 35.2812 0.163991 36.0575 0.484756C36.8338 0.80552 37.5393 1.27604 38.1338 1.86946C38.7282 2.46288 39.2 3.16758 39.5221 3.94332C39.8442 4.71905 40.0103 5.55065 40.0111 6.3906V33.6205C40.0074 35.3151 39.3311 36.939 38.1307 38.1352C36.9303 39.3315 35.3041 40.0022 33.6094 40ZM9.94677 1.93569C9.67846 1.93587 9.41339 1.99433 9.16989 2.107C8.92639 2.21968 8.71027 2.38391 8.53647 2.58832L2.37816 9.81678C2.0929 10.1527 1.93611 10.579 1.93571 11.0197V33.6205C1.93717 34.8008 2.4067 35.9324 3.24132 36.767C4.07594 37.6016 5.20751 38.0711 6.38783 38.0726H33.6094C34.195 38.0737 34.7751 37.9594 35.3165 37.7362C35.858 37.513 36.3501 37.1853 36.7649 36.7719C37.1796 36.3584 37.5088 35.8673 37.7337 35.3266C37.9585 34.7858 38.0746 34.2061 38.0754 33.6205V6.3906C38.0746 5.20979 37.6054 4.0775 36.7707 3.24229C35.936 2.40707 34.804 1.93716 33.6232 1.93569H9.94677Z"></path>
                        <path d="M6.77221 11.8327H0.965087V9.897H6.77221C7.12644 9.897 7.46617 9.75628 7.71665 9.5058C7.96713 9.25532 8.10785 8.91559 8.10785 8.56136V0.967849H10.0436V8.56136C10.0428 9.42875 9.69792 10.2604 9.08459 10.8737C8.47125 11.4871 7.6396 11.832 6.77221 11.8327Z"></path>
                        <path d="M35.4926 31.3529L27.3571 16.5641C27.1693 16.2255 26.8959 15.9421 26.5643 15.7422C26.2326 15.5423 25.8543 15.433 25.4671 15.4251C25.08 15.4173 24.6976 15.5112 24.3581 15.6975C24.0186 15.8838 23.734 16.1559 23.5327 16.4867L17.5762 26.4832C17.486 26.6395 17.3562 26.7694 17.1999 26.8596C17.0436 26.9499 16.8663 26.9975 16.6858 26.9976C16.5042 27.0106 16.3224 26.9758 16.1584 26.8968C15.9944 26.8177 15.854 26.697 15.7511 26.5468L13.2624 22.468C13.0649 22.1678 12.7955 21.9217 12.4787 21.7522C12.1619 21.5826 11.8077 21.495 11.4483 21.4974H11.4317C11.074 21.4924 10.7206 21.5765 10.4035 21.7421C10.0863 21.9077 9.81534 22.1495 9.61493 22.4459L3.88801 31.1676C3.69165 31.4559 3.57872 31.7928 3.56164 32.1412C3.54456 32.4896 3.624 32.836 3.79122 33.1421C3.97984 33.4821 4.25719 33.7645 4.5937 33.9593C4.93021 34.1541 5.31326 34.254 5.70204 34.2482H33.5707C33.94 34.2538 34.3045 34.1641 34.629 33.9878C34.9536 33.8115 35.2272 33.5545 35.4234 33.2416C35.5975 32.9597 35.6953 32.6375 35.7075 32.3064C35.7196 31.9753 35.6455 31.6468 35.4926 31.3529Z"></path>
                        <path d="M15.5576 11.0861C14.8881 11.0861 14.2337 11.2846 13.6771 11.6565C13.1205 12.0284 12.6867 12.5571 12.4305 13.1755C12.1743 13.794 12.1073 14.4745 12.2379 15.1311C12.3685 15.7877 12.6908 16.3908 13.1642 16.8641C13.6376 17.3375 14.2407 17.6599 14.8972 17.7905C15.5538 17.9211 16.2344 17.8541 16.8528 17.5979C17.4713 17.3417 17.9999 16.9079 18.3718 16.3512C18.7438 15.7946 18.9423 15.1402 18.9423 14.4708C18.9415 13.5733 18.5847 12.7129 17.9501 12.0783C17.3155 11.4437 16.455 11.0868 15.5576 11.0861Z"></path>
                    </g>
                    <defs>
                        <clipPath id="clip0_37_182">
                            <rect width="40" height="40"></rect>
                        </clipPath>
                    </defs>
                </svg>`;

    this.panel = `
                <h4 class="text-center fw-lighter my-3 panel-head">
                    Images
                </h4>
                <div class="purple-box p-3 panel-desc fs-6">
                    Select the image you’d like to display on OpenSea.
                </div>
                <div id="panel-images" class="h-100 overflow-auto">
                    <div id="dashboard_images" class="flex-grow-1 panel-items d-flex flex-wrap justify-content-between align-items-start">
                        
                    </div>
                </div>
                <div class="download-all p-3 panel-footer d-flex flex-column align-items-center">
                    <button class="submit opensea-update-image">Update your image on OpenSea</button>
                    <button class="mt-2 submit images-download-all">Download all</button>
                </div>
                `;
}

NfpImageModule.prototype.Init = async function () {
    this.initListeners();
}

NfpImageModule.prototype.Display = async function (nft) {
    if (!this.enabled || this.IsNftBlocked(nft)) {
        return;
    }
    if (this.selectedToken.equals(nft)) {
        await this.selectImage();
        return;
    }
    this.selectedToken = nft;
    this.selectedImage = null;
    dashboard_images.innerHTML = "";
    for (let i in this.available) {
        if (this.notAvailable[i]===true) {
            continue;
        }
        if (this.notAvailable.hasOwnProperty(i) && this.notAvailable[i].indexOf(this.selectedToken.token.toString()) !== -1) {
            continue;
        }
        this.addMedia(i, this.available[i]);
    }
}

NfpImageModule.prototype.IsNftBlocked = function (nft) {
    return false;
}

NfpImageModule.prototype.getImageURL = function(token, imageType = null) {
    if (imageType) {
        token = token.toString().padStart(4, '0');
        return `${NfpImageModuleBaseURL}t/${imageType}/${token}.png`;
    } else {
        return `${NfpImageModuleBaseURL}t/${token}`;
    }
}

NfpImageModule.prototype.getAnimationURL = function(token, imageType = null) {
    return `${NfpImageModuleBaseURL}a/${token}.mp4`;
}

NfpImageModule.prototype.addMedia = async function (imageType = '', name = 'Default') {
    if (imageType.substring(0, 4) === 'anim') {
        return this.addVideo(imageType, name);
    } else {
        return this.addImage(imageType, name);
    }
}

NfpImageModule.prototype.addVideo = async function (imageType = '', name = 'Default') {
    const base = this.getAnimationURL(this.selectedToken.token, imageType);

    const div = document.createElement("div");
    div.classList.add('img-container', 'w-50', 'pt-3');
    div.setAttribute('data-image', imageType);
    div.setAttribute('data-name', name);
    div.setAttribute('data-src', "name");
    div.innerHTML = `
                        <video class="mb-2" autoplay="false" muted loop width="200" height="200" style="width:100%; height: 100%">
                        <source src="${base}" type="video/mp4">
                        </video>
                        <p class="mb-1">${name}</p>
                        `;
    div.addEventListener('click', (e) => this.selectImage(e));
    dashboard_images.append(div);
}

NfpImageModule.prototype.addImage = async function (imageType = '', name = 'Default') {
    const base = this.getImageURL(this.selectedToken.token, imageType);

    const div = document.createElement("div");
    div.classList.add('img-container', 'w-50', 'pt-3');
    div.setAttribute('data-image', imageType);
    div.setAttribute('data-name', name);
    div.setAttribute('data-src', "name");
    div.innerHTML = `
                        <img class="mb-2" title="${name}" src="${base}" alt="placeholder img">
                        <p class="mb-1">${name}</p>
                        `;
    div.addEventListener('click', (e) => this.selectImage(e));
    dashboard_images.append(div);
}

NfpImageModule.prototype.selectImage = async function (e = null) {
    let isVideo = false;
    if (e !== null) {
        isVideo = e.target.tagName === "VIDEO";
        if (e.target.tagName === "IMG" || e.target.tagName === "P" || isVideo) {
            this.selectedImage = e.target.parentNode;
        } else {
            this.selectedImage = e.target;
        }
    }
    if (!this.selectedImage) {
        return;
    }


    isVideo = this.selectedImage.getAttribute('data-image').substring(0, 4) === 'anim';
    this.ui.panel.reset();
    if (isVideo) {
        this.ui.panel.setSelectedVideo(this.selectedImage.querySelector('source').src);
    } else {
        this.ui.panel.setSelectedImage(this.selectedImage.querySelector('img').src);
    }
    this.ui.panel.addText('Show off your traits by changing your NFP image on OpenSea, or download image files to use as a PFP, wallpaper, etc.')
        .render();
}

NfpImageModule.prototype.download = async function (what) {
    const now = Math.floor(Date.now() / 1000);
    this.ui.getSignature(this.selectedToken.address, true).then(signature => {
        this.ui.loading(true);
        const hash = dazethutil.hashAll([what, this.selectedToken.token, dazethutil.me(), now, signature.Signature, signature.Nonce, signature.Tokens, signature.SigHash]);

        const data = {
            who: dazethutil.me(),
            sig: signature.Signature,
            sigHash: signature.SigHash,
            tokens: signature.Tokens,
            nonce: signature.Nonce.toString(),
            hash: hash,
            token: this.selectedToken.token,
            now: now.toString(10),
            what: what
        }

        const url = "/nft-api/nfp/gen1/download?" + (new URLSearchParams(data)).toString();
        document.location.href = url;
        this.ui.loading(false);
    });
}


NfpImageModule.prototype.save = async function (e) {
    const image = this.selectedImage.getAttribute('data-image');
    const now = Math.floor(Date.now() / 1000);
    const isAnimation = image.substring(0, 4) === 'anim';
    this.ui.getSignature(this.selectedToken.address, true).then(signature => {
        if (signature === false) {
            return;
        }
        this.ui.loading(true);
        const hash = dazethutil.hashAll([image, this.selectedToken.token, dazethutil.me(), now, signature.Signature, signature.Nonce, signature.Tokens, signature.SigHash]);
        const data = {
            who: dazethutil.me(),
            sig: signature.Signature,
            sigHash: signature.SigHash,
            tokens: signature.Tokens,
            nonce: signature.Nonce.toString(),
            hash: hash,
            token: this.selectedToken.token,
            now: now.toString(10),
            what: image
        }
        this.ui.modal.Processing('Image Change Processing', 'Your selected NFP PFP image change is currently being processed...');
        fetch(this.ui.upgrade.config.baseUrl +"/nft-api/nfp/gen1/swap", {
            method: 'POST',
            body: (new URLSearchParams(data)).toString(),
            headers: {
                "Content-Type": "application/x-www-form-urlencoded"
            }
        }).then((response) => {
            return response.json()
        }).then((res) => {
            this.ui.loading(false);
            if (res.status !== 201) {
                if (isAnimation) {
                    this.ui.selectedMeta.animation_url = this.getAnimationURL(this.selectedToken.token, image);
                }
                this.ui.displayHero(data.nonce);
                this.updateSelectedInventory(data.nonce);
                this.selectedImage = null;
                this.ui.panel.reset(true);
                this.ui.modal.View(
                    'Image Change Successful!',
                    'Your NFP PFP change has been completed. You will need to refresh MetaData on OpenSea to see this change.',
                    [
                        {
                            text: 'View NFP On OpenSea',
                            callback : () => { window.open(`https://opensea.io/assets/${this.selectedToken.address}/${this.selectedToken.token}`); return false; }
                        },
                        {
                            text: 'Close',
                        }
                    ]
                );
            } else {
                this.ui.loading(false);
                this.ui.modal.Error('Image Change Error', 'Please try again later.');
                console.error(res);
            }
        }).catch((error) => {
            this.ui.modal.Error('Image Change Failed', 'Please try again later...');
            this.ui.loading(false);
            console.error(error)
        })
    });
}

NfpImageModule.prototype.Reset = async function () {
    dashboard_images.innerHTML = "";
}

NfpImageModule.prototype.updateSelectedInventory = function (cb) {
    const img = document.querySelector(`#invList a.nft[data-address="${this.selectedToken.address}"][data-id="${this.selectedToken.token}"] img`);
    let url = img.parentNode.getAttribute('data-img');
    if (url.indexOf('?') > -1) {
        url += `&_=${cb}`;
    } else {
        url += `?_=${cb}`;
    }
    img.src = url;
}

NfpImageModule.prototype.initListeners = function () {
    document.querySelector('.images-download-all').addEventListener('click', async e => {
        await this.download('thumbs');
    })

    document.querySelector('.opensea-update-image').addEventListener('click', e => this.save(e))
}
